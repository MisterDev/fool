package main;

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.CharStreams;
import org.apache.commons.cli.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Options options = new Options();
        options.addRequiredOption("i", "input", true, "input .fool file");
        options.addOption("d", "debug", false, "show debug logs");
        options.addOption("a", "ast", false, "show the AST");
        options.addOption("s", "svm", true, "outputs the generated SVM code to the given file");
        options.addOption("b", "bytecode", true, "outputs the generated Bytecode to the given file");
        options.addOption("t", "test", false, "the input file is treatead as a .yml test suite file");
        options.addOption("c", "no-colors", false, "disable the output colors");

        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine line = parser.parse(options, args);

            String inputFilename = line.getOptionValue("input");
            String svmFilename = inputFilename.substring(0, inputFilename.lastIndexOf(".")) + ".svm";
            String bytecodeFilename = "";

            if (line.hasOption("svm")) {
                svmFilename = line.getOptionValue("svm");
            }

            if (line.hasOption("bytecode")) {
                bytecodeFilename = line.getOptionValue("bytecode");
            }

            if (line.hasOption("test")) {
                TestComplete.runTestSuite(line.getOptionValue("input"), line.hasOption("no-colors"));
            } else {
                try {
                    CharStream input = CharStreams.fromFileName(inputFilename);
                    String result = FoolRunner.run(
                            input,
                            svmFilename,
                            bytecodeFilename,
                            line.hasOption("svm"),
                            line.hasOption("debug"),
                            line.hasOption("ast"),
                            line.hasOption("no-colors")
                    );
                    System.out.println("Result: " + result);
                } catch (Exception e) {
                    System.err.println("Empty input file.");
                }
            }
        } catch (ParseException e) {
            System.err.println("Parsing failed: " + e.getMessage());
            HelpFormatter formatter = new HelpFormatter();
            formatter.printHelp("fool", options);
        }
    }

}
